demo()
library("rstudio", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
install.packages("pylr")
install.packages("ggplot2")
install.packages('knitr', dependencies = TRUE)
install.packages("dplyr")
install.package("ggvi"")
install.packages("ggvis")
install.packages("reshape2")
clear()
1+1
help(min)
library("rmarkdown", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
library("rstudio", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
library("highr", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
library("knitr", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
install.packages(c("digest", "jsonlite", "lazyeval", "manipulate", "mgcv", "RColorBrewer", "RCurl", "reshape2", "shiny", "testit"))
install.packages("knitr")
setwd("~/Code/R-Assignment3")
outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
head(outcome)
outcome[,11] <- as.numeric(outcome[,11])
hist(outcome[,11])
head(outcome)
names(outcome)
n <- names(outcome)
outcome$names
outcome$State
?is.in
?is.in
ste <- outcome$State
ste <- as.factor(outcome$State)
ste
ste <- as.factor(outcome$State, levels)
ste(levels)
ste <- as.factor(outcome$State, levels)
ste <- as.factor(outcome$State)
ste(levels)
ste.levels
ste <- factor(outcome$State, levels)
s <- outcome$State
ste <- factor(s, level)
ste <- factor(s, levels)
ste <- unique(s)
ste
source("best.R")
s <- best()
s <- best(x,y)
source('~/Code/R-Assignment3/best.R')
source("best.R")
best(x,y)
s <- best(x,y)
s
n
?strsplit
strsplit(n[1],".")
strsplit(n[1],"[.]")
strsplit(n[11],"[.]")
a <- sapply(n, strsplit(,"[.]"))
a <- sapply(n, strsplit(n,"[.]"))
a <- sapply(n, strsplit(), "[.]")
a <- sapply(n, strsplit, "[.]")
a
source('~/Code/R-Assignment3/best.R')
source('~/Code/R-Assignment3/best.R')
source('~/Code/R-Assignment3/best.R')
s <- best(x,y)
s
s.outcome_list
source('~/Code/R-Assignment3/best.R')
s <- best(x,y)
source('~/Code/R-Assignment3/best.R')
s <- best(x,y)
source('~/Code/R-Assignment3/best.R')
s <- best(x,y)
s
source('~/Code/R-Assignment3/best.R')
source('~/Code/R-Assignment3/best.R')
s <- best(x,y)
s
source('~/Code/R-Assignment3/best.R')
s <- best(x,y)
s
source('~/Code/R-Assignment3/best.R')
s <- best(x,y)
source('~/Code/R-Assignment3/best.R')
s <- best(x,y)
s
source('~/Code/R-Assignment3/best.R')
l <- 1:10
length(l)
for (i in -1:length(l)) {print (l[i])}
?for
]
source('~/Code/R-Assignment3/best.R')
source('~/Code/R-Assignment3/best.R')
source('~/Code/R-Assignment3/best.R')
x <- best(y,z)
debugSource('~/Code/R-Assignment3/best.R')
return (sl)
x <- best(y,z)
debugSource('~/Code/R-Assignment3/best.R')
x <- best(y,z)
debugSource('~/Code/R-Assignment3/best.R')
x <- best(y,z)
debugSource('~/Code/R-Assignment3/best.R')
x <- best(y,z)
x <- best(y,z)
debugSource('~/Code/R-Assignment3/best.R')
x <- best(y,z)
debugSource('~/Code/R-Assignment3/best.R')
x <- best(y,z)
debugSource('~/Code/R-Assignment3/best.R')
debugSource('~/Code/R-Assignment3/best.R')
x <- best(y,z)
x <- best(y,z)
debugSource('~/Code/R-Assignment3/best.R')
x <- best(y,z)
debugSource('~/Code/R-Assignment3/best.R')
?seq_along
outcome <- read.csv("outcome-of-care-measures.csv",colClasses = "character")
oname <- names(outcome)
tmp <-sapply (oname, strsplit, "[.]")
for (i in seq_along(tmp)) print(tmp[i])
for (j in seq_along(tmp[40])) {print }
z <- tmp[40]
for (j in seq_along(z)) {print (z[j]) }
for (j in seq_along(z)) {print (z[9]) }
print (z[9])
print (z[8])
z
z[,8]
class(z)
for (i in 1:length(z)) print(z[i])
for (i in 1:length(z), by=2) print(z[i])
for (i in 1:length(z) by=2) print(z[i])
for (i in seq(from=1, to=length(z), by=2) print(z[i])
for (i in seq(from=1, to=length(z), by=2) {print(z[i])}
for (i in seq(from=1, to=length(z), by=2)) {print(z[i])}
for (i in seq(from=1, to=length(z), by=5)) {print(z[i])}
z
z[9]
z[,9]
z[9,]
z[[9]]
z[4]
z[1,9]
z[2:9]
z$9
z$[,9]
z
w <- vector(z)
history
for (i in seq_along(tmp)) print(tmp[i])
sapply(strsplit(rownames(my_data),split= "\\."),'[',1)
sapply(strsplit(rownames(oname),split= "\\."),'[',1)
sapply(strsplit(oname,split= "\\."),'[',1)
a < c("b","c","d","e")
a <- c("b","c","d","e")
a
a[3]
tmp <-sapply (oname, strsplit, "[.]")
tmp
tmp[,9]
tmp[[,9]]
tmp[[9]]
tmp[[46,9]]
tmp[46,9]
tmp[46,8]
tmp[40,8]
tmp[40,1]
tmp[1,40]
tmp[40]
tmp[40][9]
tmp
tmp$Number.of.Patients...Hospital.30.Day.Readmission.Rates.from.Pneumonia
tmp$Number.of.Patients...Hospital.30.Day.Readmission.Rates.from.Pneumonia[9]
ol
oname
for (i in oname[1:46]) print oname[i]
for (i in seq_along(oname) print oname[i]
for (i in seq_along(oname)) print oname[i]
for (i in 1:46) print oname[i]
for (i in 1:46) print (oname[i])
debugSource('~/Code/R-Assignment3/best.R')
sl <<- paste(sl, tmp[j+1:length(tmp)])
x <- best(y,z)
source('~/Code/R-Assignment3/best.R')
debugSource('~/Code/R-Assignment3/best.R')
x <- best(y,z)
debugSource('~/Code/R-Assignment3/best.R')
debugSource('~/Code/R-Assignment3/best.R')
x <- best(y,z)
debugSource('~/Code/R-Assignment3/best.R')
x <- best(y,z)
debugSource('~/Code/R-Assignment3/best.R')
x <- best(y,z)
rm(list=ls())
x <- best(y,z)
debugSource('~/Code/R-Assignment3/best.R')
x <- best(y,z)
debugSource('~/Code/R-Assignment3/best.R')
debugSource('~/Code/R-Assignment3/best.R')
debugSource('~/Code/R-Assignment3/best.R')
x <- best(y,z)
debugSource('~/Code/R-Assignment3/best.R')
x <- best(y,z)
debugSource('~/Code/R-Assignment3/best.R')
debugSource('~/Code/R-Assignment3/best.R')
x <- best(y,z)
debugSource('~/Code/R-Assignment3/best.R')
debugSource('~/Code/R-Assignment3/best.R')
x <- best(y,z)
debugSource('~/Code/R-Assignment3/best.R')
outcome <- read.csv("outcome-of-care-measures.csv",colClasses = "character")
oname <- names(outcome)
for (i in seq_along(onames)) {
tmp <- strsplit(onames[i], "[.]")
for (j in seq_along(tmp)) {print (j, tmp[j])}
}
tmp <- strsplit(oname[i], "[.]")
tmp <- strsplit(onames[i], "[.]")
for (i in seq_along(oname)) {
tmp <- strsplit(onames[i], "[.]")
for (j in seq_along(tmp)) {print (j, tmp[j])}
}
tmp <- strsplit(oname[i], "[.]")
for (i in seq_along(onames)) {
]
outcome <- read.csv("outcome-of-care-measures.csv",colClasses = "character")
onames <- names(outcome)
for (i in seq_along(onames)) {
tmp <- strsplit(onames[i], "[.]")
for (j in seq_along(tmp)) {print (j, tmp[j])}
}
tmp[1]
str(tmp)
tmp <- strsplit(onames[40], "[.]")
tmp
tmp[9]
tmp[,9]
tmp[[9]]
tmp
length(tmp)
str(tmp)
?list
unlist(tmp)
tmo
tmp
a <- names(tmp)
a
