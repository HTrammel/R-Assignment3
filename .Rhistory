print (z[8])
z
z[,8]
class(z)
for (i in 1:length(z)) print(z[i])
for (i in 1:length(z), by=2) print(z[i])
for (i in 1:length(z) by=2) print(z[i])
for (i in seq(from=1, to=length(z), by=2) print(z[i])
for (i in seq(from=1, to=length(z), by=2) {print(z[i])}
for (i in seq(from=1, to=length(z), by=2)) {print(z[i])}
for (i in seq(from=1, to=length(z), by=5)) {print(z[i])}
z
z[9]
z[,9]
z[9,]
z[[9]]
z[4]
z[1,9]
z[2:9]
z$9
z$[,9]
z
w <- vector(z)
history
for (i in seq_along(tmp)) print(tmp[i])
sapply(strsplit(rownames(my_data),split= "\\."),'[',1)
sapply(strsplit(rownames(oname),split= "\\."),'[',1)
sapply(strsplit(oname,split= "\\."),'[',1)
a < c("b","c","d","e")
a <- c("b","c","d","e")
a
a[3]
tmp <-sapply (oname, strsplit, "[.]")
tmp
tmp[,9]
tmp[[,9]]
tmp[[9]]
tmp[[46,9]]
tmp[46,9]
tmp[46,8]
tmp[40,8]
tmp[40,1]
tmp[1,40]
tmp[40]
tmp[40][9]
tmp
tmp$Number.of.Patients...Hospital.30.Day.Readmission.Rates.from.Pneumonia
tmp$Number.of.Patients...Hospital.30.Day.Readmission.Rates.from.Pneumonia[9]
ol
oname
for (i in oname[1:46]) print oname[i]
for (i in seq_along(oname) print oname[i]
for (i in seq_along(oname)) print oname[i]
for (i in 1:46) print oname[i]
for (i in 1:46) print (oname[i])
debugSource('~/Code/R-Assignment3/best.R')
sl <<- paste(sl, tmp[j+1:length(tmp)])
x <- best(y,z)
source('~/Code/R-Assignment3/best.R')
debugSource('~/Code/R-Assignment3/best.R')
x <- best(y,z)
debugSource('~/Code/R-Assignment3/best.R')
debugSource('~/Code/R-Assignment3/best.R')
x <- best(y,z)
debugSource('~/Code/R-Assignment3/best.R')
x <- best(y,z)
debugSource('~/Code/R-Assignment3/best.R')
x <- best(y,z)
rm(list=ls())
x <- best(y,z)
debugSource('~/Code/R-Assignment3/best.R')
x <- best(y,z)
debugSource('~/Code/R-Assignment3/best.R')
debugSource('~/Code/R-Assignment3/best.R')
debugSource('~/Code/R-Assignment3/best.R')
x <- best(y,z)
debugSource('~/Code/R-Assignment3/best.R')
x <- best(y,z)
debugSource('~/Code/R-Assignment3/best.R')
debugSource('~/Code/R-Assignment3/best.R')
x <- best(y,z)
debugSource('~/Code/R-Assignment3/best.R')
debugSource('~/Code/R-Assignment3/best.R')
x <- best(y,z)
debugSource('~/Code/R-Assignment3/best.R')
outcome <- read.csv("outcome-of-care-measures.csv",colClasses = "character")
oname <- names(outcome)
for (i in seq_along(onames)) {
tmp <- strsplit(onames[i], "[.]")
for (j in seq_along(tmp)) {print (j, tmp[j])}
}
tmp <- strsplit(oname[i], "[.]")
tmp <- strsplit(onames[i], "[.]")
for (i in seq_along(oname)) {
tmp <- strsplit(onames[i], "[.]")
for (j in seq_along(tmp)) {print (j, tmp[j])}
}
tmp <- strsplit(oname[i], "[.]")
for (i in seq_along(onames)) {
]
outcome <- read.csv("outcome-of-care-measures.csv",colClasses = "character")
onames <- names(outcome)
for (i in seq_along(onames)) {
tmp <- strsplit(onames[i], "[.]")
for (j in seq_along(tmp)) {print (j, tmp[j])}
}
tmp[1]
str(tmp)
tmp <- strsplit(onames[40], "[.]")
tmp
tmp[9]
tmp[,9]
tmp[[9]]
tmp
length(tmp)
str(tmp)
?list
unlist(tmp)
tmo
tmp
a <- names(tmp)
a
library(swirl)
swirl()
getwd()
ls()
x <- 9
ls()
dir()
?list.files
args(list.files())
args(list.files)
old.dir <- getwd()
dir.create("testdir")
setwd("testdir")
file.create("mytest.R")
dir()
list.files()
file.exists("mytest.R")
file.info("mytest.R")
file.rename("mytest.R","mytest2.R")
file.copy("mytest2.R","mytest3.R")
file.path("mytest3.R")
file.path("folder1","folder2")
?dir.create
dir.create(file.path("testdir2","testdir3"), recursive=TRUE)
unlink("testdir2", recursive=TRUE)
setwd("dir.old")
ls()
setwd(old.dir)
unlink(testdir, recursive=TRUE)
unlink("testdir", recursive=TRUE)
1:20
pi:10
15:1
?`:`
seq(1,20)
seq(1,10,by=0.5)
seq(0,10,by=0.5)
my_seq <- seq(5,10,length=30)
length(my_seq)
1:length(my_seq)
seq(along.with = my_seq)
seq_along(my_seq)
rep(0, times=40)
rep(c(0,1,2), times=10)
rep(c(0,1,2), each=10)
num_vect <- c(0.5,55,-10,6)
yn <- num_vect < 1
tf <- num_vect < 1
tf
num_vect >= 6
my_char <- c("My","name","is")
my_char
paste(my_char, collapse=" ")
my_name <- c(my_char, "Harold")
my_name
paste(my_name, collapse=" ")
paste("Hello","world!", sep=" ")
paste(c(1:3),c("X""Y","Z"), sep="")
paste(c(1:3),c("X","Y","Z"), sep="")
paste(LETTERS,1:4,sep="-")
x<- c(44,NA,5,NA)
x*3
y <- rnorm(1000)
z <- rep(NA,1000)
my_data <- sample(c(y,z),100)
my_na <- is.na(my_data)
my_na
my_data == NA
s <- sum(my_na)
sum(my_na)
my_data
0/0
Inf - Inf
x
x[1:10]
x[is.na(x)]
x[!is.na(x)]
y <- x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) & x >0]
z <- c(x[[/2]])
z <- c(is.even(x))
z <- x[c(3,5,7)]
z <-c(3,5,7)
z <- x[ c(3, 5, 7) ]
x[ c(3, 5, 7) ]
x[0]
x[3000]
x[c-2,-10]
x[c-2,-10)]
x[c(-2,-10]
x[c(-2,-10)]
x[-c(2,10)]
vect <- c(foo=11, bar=2, norf=NA)
vect
names(vect)
vect2 <- c(11,2,NA)
names(vect2) <- c("foo","bar","norf")
identical(vect,vect2)
vect["bar"]
vect["foo","bar"]
vect[c("foo","bar")]
my_vector <= 1:20
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix
my_matrix2 <- matrix(1:20, nrow=4, ncol=5)
identical(my_matrix, my_matrix2)
patients <- c("Bill","Gina","Kelly","Sean")
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c("patient","age","weight","bp","rating","test")
colnames(mydata) <- cnames
colnames(my_data) <- cnames
my_data
rm (list = ls())
source('C:/Users/hlt/GitHub/R-Assignment3/best.R')
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
attributes(data)
dn <- names(data)
dn
dn
t <- matrix(dn[11,17,29],1,1)
t <- matrix(dn[c(11,17,29)],1,1)
t
t <- matrix(dn[c(11,17,29)],3,1)
t
t <- matrix(dn[c(11,17,23)],3,1)
rownames(t) <- c("heart attack","heart failure","pneumonia")
t
?matrix
rownames(t) <- c("heart attack","heart failure","pneumonia")
?toupper
st <- unique(data$State)
st == toupper("TN")
sum(st == toupper("TN"))
sum(st == toupper("pr"))
sum(st == toupper("gu"))
sum(st == toupper("za"))
?error
?message
sum(rownames(target)==tolower("heart attack"))
sum(rownames(t)==tolower("heart attack"))
source('C:/Users/hlt/GitHub/R-Assignment3/best.R')
source('C:/Users/hlt/GitHub/R-Assignment3/best.R')
source('C:/Users/hlt/GitHub/R-Assignment3/best.R')
source('C:/Users/hlt/GitHub/R-Assignment3/best.R')
source('C:/Users/hlt/GitHub/R-Assignment3/best.R')
best()
best(tn,pneumonia
)
best("tn","pneumonia")
best("tz","pneumonia")
best("tz","vomiting")
best("tn","vomiting")
source('C:/Users/hlt/GitHub/R-Assignment3/best.R')
?cat
source('C:/Users/hlt/GitHub/R-Assignment3/best.R')
source('C:/Users/hlt/GitHub/R-Assignment3/best.R')
source('C:/Users/hlt/GitHub/R-Assignment3/best.R')
source('C:/Users/hlt/GitHub/R-Assignment3/best.R')
best("tn","vomiting")
source('C:/Users/hlt/GitHub/R-Assignment3/best.R')
best("tn","vomiting")
best("tz","vomiting")
source('C:/Users/hlt/GitHub/R-Assignment3/best.R')
source('C:/Users/hlt/GitHub/R-Assignment3/best.R')
source('C:/Users/hlt/GitHub/R-Assignment3/best.R')
best("tz","vomiting")
best("tn","vomiting")
source('C:/Users/hlt/GitHub/R-Assignment3/best.R')
best("tz","vomiting")
source('C:/Users/hlt/GitHub/R-Assignment3/best.R')
t
t$pneumonia
t[pneumonia,]
t["pneumonia",]
data[data[,ste]=='TN',]
data[data[,st]=='TN',]
data[data[st,]=='TN',]
data[data[st,]=='TN',t["pneumonia",]]
data[data[st,]=='TN',t["heart attack",]]
data[data[st,]=='TN',]
t1 <- data[data[st,]=='TN',]
t1 <- data[data["State",]=='TN',]
t1 <- data["Hospital.Name","State"]
t1
t1 <- NULL
t1 <- data[data[,"State"] =='TN',]
source('C:/Users/hlt/GitHub/R-Assignment3/best.R')
z < best ("tn","heart attack")
z <- best ("tn","heart attack")
source('C:/Users/hlt/GitHub/R-Assignment3/best.R')
z <- best ("tn","heart attack")
t1 <- names(z)
t1 <- z["Hospital.Name"]
t1
t1 <- z["Hospital.Name",t["heart attack"]]
t1 <- z[t["heart attack"]]
t1 <- z[,t["heart attack"]]
t["heart attack"]
t["heart attack",]
t1 <- z[,t["heart attack",]]
t1 <- z["Hospital.Name",t["heart attack",]]
t1
t1 <- data.frame(z["Hospital.Name",t["heart attack",]])
z <- best ("tn","heart attack")
z
head(z)
z <- best ("tn","heart attack")
h <- z["Hospital.Name"]
h
oc <- z[,t["heart attack",]]
oc
df <- data.frame(h,oc)
is.na(oc)
oc == 'Not Available'
oc[oc == 'Not Available']
oc[oc == 'Not Available'] <- NA
oc
as.numeric(oc)
oc
source('C:/Users/hlt/GitHub/R-Assignment3/best.R')
source('C:/Users/hlt/GitHub/R-Assignment3/best.R')
z <- best ("tn","heart attack")
source('C:/Users/hlt/GitHub/R-Assignment3/best.R')
z <- best ("tn","heart attack")
z
str z
z <- best ("tn","heart attack")
str(z)
?data.frame
source('C:/Users/hlt/GitHub/R-Assignment3/best.R')
z <- best ("tn","heart attack")
str(z)
summary(z)
sapply(z, min)
bad <- is.na(z$Outcome)
sapply(z[,!bad], mean)
sapply(z[!bad], mean)
z[!bad]
bad
z[,!bad]
z[,bad]
z[Hospital,!bad]
z[Hospital]
z["Hospital"]
z["Hospital",!bad]
complete.cases(df)
good <- complete.cases(z)
m <- min(df)
m <- sapply(df, mean(Outcome))
m <- sapply(df, mean(df$Outcome))
m <- sapply(df, mean(df$Outcome[good]))
source('C:/Users/hlt/GitHub/R-Assignment3/best.R')
z <- best ("tn","heart attack")
z
source('C:/Users/hlt/GitHub/R-Assignment3/best.R')
z <- best ("tn","heart attack")
z
source('C:/Users/hlt/GitHub/R-Assignment3/best.R')
z <- best ("tn","heart attack")
source('C:/Users/hlt/GitHub/R-Assignment3/best.R')
z <- best ("tn","heart attack")
z
z["Hospital",min("Outcome")]
z["Hospital",min("Outcome")]
?min
o <- min(z)
o <- min(z$Outcome)
o
z[z["Hospital","Outcome"] == min(z$Outcome),]
z[z["Hospital",min(z$Outcome)]
]
z["Hospital",min("Outcome")]
z[z["Hospital",],min("Outcome")]
z[z["Hospital",]min("Outcome"),]
z[z["Hospital",],min("Outcome")]
z[z["Hospital",]]
z["Hospital",]
z
z[,"Hospital"]
z[min("Outcome"),"Hospital"]
z[min("Outcome")]
mo <- min(z$Outcome)
z[z[,Outcome] == mo,]
z[z[,"Outcome"] == mo,]
z[z[,"Outcome"] == min(z$Outcome),]
source('C:/Users/hlt/GitHub/R-Assignment3/best.R')
z <- best ("tn","heart attack")
source('C:/Users/hlt/GitHub/R-Assignment3/best.R')
z <- best ("tn","heart attack")
z
z <- best ("il","heart attack")
debugSource('C:/Users/hlt/GitHub/R-Assignment3/best.R')
z <- best ("il","heart attack")
debugSource('C:/Users/hlt/GitHub/R-Assignment3/best.R')
z <- best ("il","heart attack")
z
source('C:/Users/hlt/GitHub/R-Assignment3/best.R')
z <- best ("fl","heart attack")
z
z <- best ("mn","heart attack")
z
z <- best ("mn","heart failure")
z
z <- best ("ga","heart failure")
z
z <- best ("tn","heart failure")
z
source('C:/Users/hlt/GitHub/R-Assignment3/best.R')
z <- best ("tx","heart failure")
z
best ("tx","heart failure")
best ("md","heart attack")
best ("md","pneumonia")
source('C:/Users/hlt/GitHub/R-Assignment3/best.R')
source('C:/Users/hlt/GitHub/R-Assignment3/best.R')
best ("md","pneumonia")
best ("md=x","pneumonia")
rm (list = ls())
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
st <- unique(data$State)
dn <- names(data)
t <- matrix(dn[c(11,17,23)],3,1)
rownames(t) <- c("heart attack","heart failure","pneumonia")
s_data <- outcome_data[outcome_data[,"State"] == toupper("tx"),]
s_data <- data[data[,"State"] == toupper("tx"),]
ho <- s_data["Hospital.Name"]
count(ho)
length(ho)
nrows(ho)
nrow(ho)
source('C:/Users/hlt/GitHub/R-Assignment3/rankhospital.R')
rankhosptial("tx""heart attack",5000)
rankhosptial("tx","heart attack",5000)
rankhospital("tx","heart attack",5000)
source('C:/Users/hlt/GitHub/R-Assignment3/rankhospital.R')
rankhospital("tx","heart attack",best)
rankhospital("tx","heart attack","best")
rankhospital("tx","heart failure","best")
rankhospital("tx","heart failure",4)
source('C:/Users/hlt/GitHub/R-Assignment3/rankhospital.R')
source('C:/Users/hlt/GitHub/R-Assignment3/rankhospital.R')
rankhospital("tx","heart attack","worst")
source('C:/Users/hlt/GitHub/R-Assignment3/rankhospital.R')
ho <- s_data["Hospital.Name"]
?if
Q
?`if`
source('C:/Users/hlt/GitHub/R-Assignment3/rankhospital.R')
source('C:/Users/hlt/GitHub/R-Assignment3/rankhospital.R')
source('C:/Users/hlt/GitHub/R-Assignment3/rankhospital.R')
rankhospital("tx","heart attack","worst")
rankhospital("md","heart attack","worst")
rankhospital("md","heart attack",4)
?order
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
st <- unique(data$State)
dn <- names(data)
t <- matrix(dn[c(11,17,23)],3,1)
rownames(t) <- c("heart attack","heart failure","pneumonia")
colnames(t) <- "Measure"
s_data <- outcome_data[outcome_data[,"State"] == toupper("tx"),]
s_data <- data[data[,"State"] == toupper("tx"),]
ho <- s_data["Hospital.Name"]
debugSource('C:/Users/hlt/GitHub/R-Assignment3/best.R')
source('C:/Users/hlt/GitHub/R-Assignment3/rankhospital.R')
oc <- s_data[,t[outcome,]]
oc <- s_data[,t["heart attack",]]
oc[oc == 'Not Available'] <- NA
df <- data.frame(ho, as.numeric(oc))
names(df) <- c("Hospital","Outcome")
good <- na.omit(df)
good
head (good)
good [ order (good[,"Outcome"],good[,"Hospital"]),]
source('C:/Users/hlt/GitHub/R-Assignment3/rankhospital.R')
